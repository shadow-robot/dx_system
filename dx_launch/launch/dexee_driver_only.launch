<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright (C) 2024-2025 Shadow Robot Company Ltd - All Rights Reserved. Proprietary and Confidential.
 Unauthorized copying of the content in this file, via any medium is strictly prohibited.
-->
<launch>
  <arg name="debug" default="false"/>
  <arg name="hand_type" default="0x02000105"/>
  <arg name="ethercat_port" default="$(optenv ETHERCAT_PORT enp1s0)"/>
  <arg name="bootload_mode" default="false"/>
  <arg name="serial_mode" default="false"/>
  <arg name="log_user" default="user"/>
  <arg name="controller_output" default="log"/>
  <arg name="state_controller_start_delay" default="2"/>
  <arg name="odometry_monitor_start_delay" default="5"/>
  <arg name="side" default="right"/>
  <arg name="side_letter" value="$(eval side[0])"/>
  <arg name="robot_state_pub_frequency" default="250"/>
  <arg name="joint_state_pub_frequency" default="125"/>
  <arg name="robot_config" default="$(find dx_config)/robot/$(arg side)/$(arg hand_type).yaml" />


  <param name="ethercat_robot_hw/ethercat_port" value="$(arg ethercat_port)" />
  <param name="ethercat_robot_hw/hand_type" value="$(arg hand_type)" />
  <!-- The robot node does not allow for underscores in the robot_prefix (but it can be an empty prefix) -->
  <param name="ethercat_robot_hw/robot_prefix" type="str" value="$(arg side_letter)h" />

  <node pkg="dx_robot" name="param_dump" type="dump_state" output="screen"/>
  <node pkg="dx_robot" name="fan_info_dump" type="dump_fan_debug">
    <param name="user" value="$(arg log_user)"/>
  </node>

  <rosparam command="load" file="$(arg robot_config)"/>

  <node if="$(arg bootload_mode)" pkg="dx_fan_devices" type="call_bootloader" name="bl_call" output="screen"/>

  <!-- Launch npo controller -->
  <rosparam command="load" file="$(find dx_config)/controllers/config/$(arg hand_type)/$(arg side)/finger_npo_controller.yaml"/>
  <node name="spawn_npo_controller"
        pkg="controller_manager" type="spawner" respawn="false"
        output="screen"
        args="F0_npo_controller F1_npo_controller F2_npo_controller"/>

  <group if="$(arg debug)">
    <node name="dx_finger" pkg="ros_control_robot" type="ros_control_robot" args="" output="screen" launch-prefix="gdb -x run -args">
    </node>
  </group>

  <group unless="$(arg debug)">
    <node name="dx_finger" pkg="ros_control_robot" type="ros_control_robot" args="" output="screen" launch-prefix="ethercat_grant">
      <param name="bootload_mode" value="$(arg bootload_mode)"/>
      <param name="fan_dev_serial_mode" value="$(arg serial_mode)"/>
    </node>
  </group>

  <node pkg="dx_robot" type="get_hand_type_service.py" name="get_hand_type_service" output="screen"/>
  <node pkg="dx_robot" type="safe_mode_monitor.py" name="safe_mode_monitor"/>

  <!-- <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" >
    <param name="publish_frequency" type="double" value="$(arg robot_state_pub_frequency)" />
    <param name="tf_prefix" type="string" value="" />
  </node> -->
  <node name="conditional_delayed_rostool_robot_state_publisher" pkg="sr_utilities_common" type="conditional_delayed_rostool.py" output="screen">
    <param name="package_name" value="robot_state_publisher" />
    <param name="executable_name" value="robot_state_publisher" />
    <rosparam param="params_list">[^robot_description$]</rosparam>
    <param name="launch_args_list" value="
    publish_frequency=$(arg robot_state_pub_frequency)" />
  </node>

  <node name="imu_timed_launch" pkg="sr_utilities_common" type="timed_roslaunch.sh"
        args="$(arg state_controller_start_delay) dx_controllers imu_state_controller.launch hand_type:=$(arg hand_type) output:=$(arg controller_output)" />

  <node name="fs_timed_launch" pkg="sr_utilities_common" type="timed_roslaunch.sh"
        args="$(arg state_controller_start_delay) dx_controllers finger_state_publisher.launch output:=$(arg controller_output)" />

  <node name="js_timed_launch" pkg="sr_utilities_common" type="timed_roslaunch.sh"
        args="$(arg state_controller_start_delay) ros_ethercat_model joint_state_publisher.launch publish_rate:=$(arg joint_state_pub_frequency)" />

  <node pkg="dx_robot" type="odometry_monitor.py" name="odometry_monitor" output="screen"
        launch-prefix="bash -c 'sleep $(arg odometry_monitor_start_delay); $0 $@' ">
  </node>
</launch>
